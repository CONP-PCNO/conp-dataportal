{"version":3,"sources":["webpack://CONPReact/./node_modules/keyboardjs/lib/key-combo.js","webpack://CONPReact/./node_modules/keyboardjs/lib/locale.js","webpack://CONPReact/./node_modules/keyboardjs/lib/keyboard.js","webpack://CONPReact/./node_modules/keyboardjs/locales/us.js","webpack://CONPReact/./node_modules/keyboardjs/index.js"],"names":["KeyCombo","keyComboStr","this","sourceStr","subCombos","parseComboStr","keyNames","reduce","memo","nextSubCombo","concat","sequenceDeliminator","comboDeliminator","keyDeliminator","subComboStrs","_splitStr","combo","i","length","push","prototype","check","pressedKeyNames","startingKeyNameIndex","_checkSubCombo","isEqual","otherKeyCombo","subCombo","otherSubCombo","slice","j","keyName","index","indexOf","splice","str","deliminator","s","d","c","ca","ci","trim","endIndex","escapedKeyName","module","exports","__webpack_require__","Locale","name","localeName","pressedKeys","_appliedMacros","_keyMap","_killKeyCodes","_macros","bindKeyCode","keyCode","bindMacro","handler","macro","keyCombo","getKeyCodes","keyCodes","getKeyNames","setKillKey","pressKey","_applyMacros","releaseKey","_clearMacros","macros","Keyboard","targetWindow","targetElement","platform","userAgent","_locale","_currentContext","_contexts","_listeners","_appliedListeners","_locales","_targetElement","_targetWindow","_targetPlatform","_targetUserAgent","_isModernBrowser","_targetKeyDownBinding","_targetKeyUpBinding","_targetResetBinding","_paused","_callerHandler","setContext","watch","setLocale","localeBuilder","locale","_localeName","getLocale","localName","bind","pressHandler","releaseHandler","preventRepeatByDefault","preventRepeat","addListener","on","unbind","listener","comboMatches","pressHandlerMatches","releaseHandlerMatches","removeListener","off","contextName","releaseAllKeys","getContext","withContext","callback","previousContextName","targetPlatform","targetUserAgent","_this","stop","global","addEventListener","attachEvent","Error","nodeType","navigator","document","event","_handleCommandBug","_bindEvent","_unbindEvent","_applyBindings","_clearBindings","pause","resume","reset","eventName","removeEventListener","detachEvent","_getGroupedListeners","listenerGroups","listenerGroupMap","listeners","sort","a","b","forEach","l","mapIndex","join","call","oldCaller","match","includes","String","fromCharCode","capitalKeyName","leftCommandKeyCode","rightCommandKeyCode","semicolonKeyCode","dashKeyCode","equalKeyCode","keyboard"],"mappings":"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","file":"1.conp-react.min.js","sourcesContent":["\r\nfunction KeyCombo(keyComboStr) {\r\n  this.sourceStr = keyComboStr;\r\n  this.subCombos = KeyCombo.parseComboStr(keyComboStr);\r\n  this.keyNames  = this.subCombos.reduce(function(memo, nextSubCombo) {\r\n    return memo.concat(nextSubCombo);\r\n  }, []);\r\n}\r\n\r\n// TODO: Add support for key combo sequences\r\nKeyCombo.sequenceDeliminator = '>>';\r\nKeyCombo.comboDeliminator    = '>';\r\nKeyCombo.keyDeliminator      = '+';\r\n\r\nKeyCombo.parseComboStr = function(keyComboStr) {\r\n  var subComboStrs = KeyCombo._splitStr(keyComboStr, KeyCombo.comboDeliminator);\r\n  var combo        = [];\r\n\r\n  for (var i = 0 ; i < subComboStrs.length; i += 1) {\r\n    combo.push(KeyCombo._splitStr(subComboStrs[i], KeyCombo.keyDeliminator));\r\n  }\r\n  return combo;\r\n};\r\n\r\nKeyCombo.prototype.check = function(pressedKeyNames) {\r\n  var startingKeyNameIndex = 0;\r\n  for (var i = 0; i < this.subCombos.length; i += 1) {\r\n    startingKeyNameIndex = this._checkSubCombo(\r\n      this.subCombos[i],\r\n      startingKeyNameIndex,\r\n      pressedKeyNames\r\n    );\r\n    if (startingKeyNameIndex === -1) { return false; }\r\n  }\r\n  return true;\r\n};\r\n\r\nKeyCombo.prototype.isEqual = function(otherKeyCombo) {\r\n  if (\r\n    !otherKeyCombo ||\r\n    typeof otherKeyCombo !== 'string' &&\r\n    typeof otherKeyCombo !== 'object'\r\n  ) { return false; }\r\n\r\n  if (typeof otherKeyCombo === 'string') {\r\n    otherKeyCombo = new KeyCombo(otherKeyCombo);\r\n  }\r\n\r\n  if (this.subCombos.length !== otherKeyCombo.subCombos.length) {\r\n    return false;\r\n  }\r\n  for (var i = 0; i < this.subCombos.length; i += 1) {\r\n    if (this.subCombos[i].length !== otherKeyCombo.subCombos[i].length) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < this.subCombos.length; i += 1) {\r\n    var subCombo      = this.subCombos[i];\r\n    var otherSubCombo = otherKeyCombo.subCombos[i].slice(0);\r\n\r\n    for (var j = 0; j < subCombo.length; j += 1) {\r\n      var keyName = subCombo[j];\r\n      var index   = otherSubCombo.indexOf(keyName);\r\n\r\n      if (index > -1) {\r\n        otherSubCombo.splice(index, 1);\r\n      }\r\n    }\r\n    if (otherSubCombo.length !== 0) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nKeyCombo._splitStr = function(str, deliminator) {\r\n  var s  = str;\r\n  var d  = deliminator;\r\n  var c  = '';\r\n  var ca = [];\r\n\r\n  for (var ci = 0; ci < s.length; ci += 1) {\r\n    if (ci > 0 && s[ci] === d && s[ci - 1] !== '\\\\') {\r\n      ca.push(c.trim());\r\n      c = '';\r\n      ci += 1;\r\n    }\r\n    c += s[ci];\r\n  }\r\n  if (c) { ca.push(c.trim()); }\r\n\r\n  return ca;\r\n};\r\n\r\nKeyCombo.prototype._checkSubCombo = function(subCombo, startingKeyNameIndex, pressedKeyNames) {\r\n  subCombo = subCombo.slice(0);\r\n  pressedKeyNames = pressedKeyNames.slice(startingKeyNameIndex);\r\n\r\n  var endIndex = startingKeyNameIndex;\r\n  for (var i = 0; i < subCombo.length; i += 1) {\r\n\r\n    var keyName = subCombo[i];\r\n    if (keyName[0] === '\\\\') {\r\n      var escapedKeyName = keyName.slice(1);\r\n      if (\r\n        escapedKeyName === KeyCombo.comboDeliminator ||\r\n        escapedKeyName === KeyCombo.keyDeliminator\r\n      ) {\r\n        keyName = escapedKeyName;\r\n      }\r\n    }\r\n\r\n    var index = pressedKeyNames.indexOf(keyName);\r\n    if (index > -1) {\r\n      subCombo.splice(i, 1);\r\n      i -= 1;\r\n      if (index > endIndex) {\r\n        endIndex = index;\r\n      }\r\n      if (subCombo.length === 0) {\r\n        return endIndex;\r\n      }\r\n    }\r\n  }\r\n  return -1;\r\n};\r\n\r\n\r\nmodule.exports = KeyCombo;\r\n","\r\nvar KeyCombo = require('./key-combo');\r\n\r\n\r\nfunction Locale(name) {\r\n  this.localeName     = name;\r\n  this.pressedKeys    = [];\r\n  this._appliedMacros = [];\r\n  this._keyMap        = {};\r\n  this._killKeyCodes  = [];\r\n  this._macros        = [];\r\n}\r\n\r\nLocale.prototype.bindKeyCode = function(keyCode, keyNames) {\r\n  if (typeof keyNames === 'string') {\r\n    keyNames = [keyNames];\r\n  }\r\n\r\n  this._keyMap[keyCode] = keyNames;\r\n};\r\n\r\nLocale.prototype.bindMacro = function(keyComboStr, keyNames) {\r\n  if (typeof keyNames === 'string') {\r\n    keyNames = [ keyNames ];\r\n  }\r\n\r\n  var handler = null;\r\n  if (typeof keyNames === 'function') {\r\n    handler = keyNames;\r\n    keyNames = null;\r\n  }\r\n\r\n  var macro = {\r\n    keyCombo : new KeyCombo(keyComboStr),\r\n    keyNames : keyNames,\r\n    handler  : handler\r\n  };\r\n\r\n  this._macros.push(macro);\r\n};\r\n\r\nLocale.prototype.getKeyCodes = function(keyName) {\r\n  var keyCodes = [];\r\n  for (var keyCode in this._keyMap) {\r\n    var index = this._keyMap[keyCode].indexOf(keyName);\r\n    if (index > -1) { keyCodes.push(keyCode|0); }\r\n  }\r\n  return keyCodes;\r\n};\r\n\r\nLocale.prototype.getKeyNames = function(keyCode) {\r\n  return this._keyMap[keyCode] || [];\r\n};\r\n\r\nLocale.prototype.setKillKey = function(keyCode) {\r\n  if (typeof keyCode === 'string') {\r\n    var keyCodes = this.getKeyCodes(keyCode);\r\n    for (var i = 0; i < keyCodes.length; i += 1) {\r\n      this.setKillKey(keyCodes[i]);\r\n    }\r\n    return;\r\n  }\r\n\r\n  this._killKeyCodes.push(keyCode);\r\n};\r\n\r\nLocale.prototype.pressKey = function(keyCode) {\r\n  if (typeof keyCode === 'string') {\r\n    var keyCodes = this.getKeyCodes(keyCode);\r\n    for (var i = 0; i < keyCodes.length; i += 1) {\r\n      this.pressKey(keyCodes[i]);\r\n    }\r\n    return;\r\n  }\r\n\r\n  var keyNames = this.getKeyNames(keyCode);\r\n  for (var i = 0; i < keyNames.length; i += 1) {\r\n    if (this.pressedKeys.indexOf(keyNames[i]) === -1) {\r\n      this.pressedKeys.push(keyNames[i]);\r\n    }\r\n  }\r\n\r\n  this._applyMacros();\r\n};\r\n\r\nLocale.prototype.releaseKey = function(keyCode) {\r\n  if (typeof keyCode === 'string') {\r\n    var keyCodes = this.getKeyCodes(keyCode);\r\n    for (var i = 0; i < keyCodes.length; i += 1) {\r\n      this.releaseKey(keyCodes[i]);\r\n    }\r\n  }\r\n\r\n  else {\r\n    var keyNames         = this.getKeyNames(keyCode);\r\n    var killKeyCodeIndex = this._killKeyCodes.indexOf(keyCode);\r\n    \r\n    if (killKeyCodeIndex > -1) {\r\n      this.pressedKeys.length = 0;\r\n    } else {\r\n      for (var i = 0; i < keyNames.length; i += 1) {\r\n        var index = this.pressedKeys.indexOf(keyNames[i]);\r\n        if (index > -1) {\r\n          this.pressedKeys.splice(index, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    this._clearMacros();\r\n  }\r\n};\r\n\r\nLocale.prototype._applyMacros = function() {\r\n  var macros = this._macros.slice(0);\r\n  for (var i = 0; i < macros.length; i += 1) {\r\n    var macro = macros[i];\r\n    if (macro.keyCombo.check(this.pressedKeys)) {\r\n      if (macro.handler) {\r\n        macro.keyNames = macro.handler(this.pressedKeys);\r\n      }\r\n      for (var j = 0; j < macro.keyNames.length; j += 1) {\r\n        if (this.pressedKeys.indexOf(macro.keyNames[j]) === -1) {\r\n          this.pressedKeys.push(macro.keyNames[j]);\r\n        }\r\n      }\r\n      this._appliedMacros.push(macro);\r\n    }\r\n  }\r\n};\r\n\r\nLocale.prototype._clearMacros = function() {\r\n  for (var i = 0; i < this._appliedMacros.length; i += 1) {\r\n    var macro = this._appliedMacros[i];\r\n    if (!macro.keyCombo.check(this.pressedKeys)) {\r\n      for (var j = 0; j < macro.keyNames.length; j += 1) {\r\n        var index = this.pressedKeys.indexOf(macro.keyNames[j]);\r\n        if (index > -1) {\r\n          this.pressedKeys.splice(index, 1);\r\n        }\r\n      }\r\n      if (macro.handler) {\r\n        macro.keyNames = null;\r\n      }\r\n      this._appliedMacros.splice(i, 1);\r\n      i -= 1;\r\n    }\r\n  }\r\n};\r\n\r\n\r\nmodule.exports = Locale;\r\n","\r\nvar Locale = require('./locale');\r\nvar KeyCombo = require('./key-combo');\r\n\r\n\r\nfunction Keyboard(targetWindow, targetElement, platform, userAgent) {\r\n  this._locale               = null;\r\n  this._currentContext       = null;\r\n  this._contexts             = {};\r\n  this._listeners            = [];\r\n  this._appliedListeners     = [];\r\n  this._locales              = {};\r\n  this._targetElement        = null;\r\n  this._targetWindow         = null;\r\n  this._targetPlatform       = '';\r\n  this._targetUserAgent      = '';\r\n  this._isModernBrowser      = false;\r\n  this._targetKeyDownBinding = null;\r\n  this._targetKeyUpBinding   = null;\r\n  this._targetResetBinding   = null;\r\n  this._paused               = false;\r\n  this._callerHandler        = null;\r\n\r\n  this.setContext('global');\r\n  this.watch(targetWindow, targetElement, platform, userAgent);\r\n}\r\n\r\nKeyboard.prototype.setLocale = function(localeName, localeBuilder) {\r\n  var locale = null;\r\n  if (typeof localeName === 'string') {\r\n\r\n    if (localeBuilder) {\r\n      locale = new Locale(localeName);\r\n      localeBuilder(locale, this._targetPlatform, this._targetUserAgent);\r\n    } else {\r\n      locale = this._locales[localeName] || null;\r\n    }\r\n  } else {\r\n    locale     = localeName;\r\n    localeName = locale._localeName;\r\n  }\r\n\r\n  this._locale              = locale;\r\n  this._locales[localeName] = locale;\r\n  if (locale) {\r\n    this._locale.pressedKeys = locale.pressedKeys;\r\n  }\r\n};\r\n\r\nKeyboard.prototype.getLocale = function(localName) {\r\n  localName || (localName = this._locale.localeName);\r\n  return this._locales[localName] || null;\r\n};\r\n\r\nKeyboard.prototype.bind = function(keyComboStr, pressHandler, releaseHandler, preventRepeatByDefault) {\r\n  if (keyComboStr === null || typeof keyComboStr === 'function') {\r\n    preventRepeatByDefault = releaseHandler;\r\n    releaseHandler         = pressHandler;\r\n    pressHandler           = keyComboStr;\r\n    keyComboStr            = null;\r\n  }\r\n\r\n  if (\r\n    keyComboStr &&\r\n    typeof keyComboStr === 'object' &&\r\n    typeof keyComboStr.length === 'number'\r\n  ) {\r\n    for (var i = 0; i < keyComboStr.length; i += 1) {\r\n      this.bind(keyComboStr[i], pressHandler, releaseHandler);\r\n    }\r\n    return;\r\n  }\r\n\r\n  this._listeners.push({\r\n    keyCombo               : keyComboStr ? new KeyCombo(keyComboStr) : null,\r\n    pressHandler           : pressHandler           || null,\r\n    releaseHandler         : releaseHandler         || null,\r\n    preventRepeat          : preventRepeatByDefault || false,\r\n    preventRepeatByDefault : preventRepeatByDefault || false\r\n  });\r\n};\r\nKeyboard.prototype.addListener = Keyboard.prototype.bind;\r\nKeyboard.prototype.on          = Keyboard.prototype.bind;\r\n\r\nKeyboard.prototype.unbind = function(keyComboStr, pressHandler, releaseHandler) {\r\n  if (keyComboStr === null || typeof keyComboStr === 'function') {\r\n    releaseHandler = pressHandler;\r\n    pressHandler   = keyComboStr;\r\n    keyComboStr = null;\r\n  }\r\n\r\n  if (\r\n    keyComboStr &&\r\n    typeof keyComboStr === 'object' &&\r\n    typeof keyComboStr.length === 'number'\r\n  ) {\r\n    for (var i = 0; i < keyComboStr.length; i += 1) {\r\n      this.unbind(keyComboStr[i], pressHandler, releaseHandler);\r\n    }\r\n    return;\r\n  }\r\n\r\n  for (var i = 0; i < this._listeners.length; i += 1) {\r\n    var listener = this._listeners[i];\r\n\r\n    var comboMatches          = !keyComboStr && !listener.keyCombo ||\r\n                                listener.keyCombo && listener.keyCombo.isEqual(keyComboStr);\r\n    var pressHandlerMatches   = !pressHandler && !releaseHandler ||\r\n                                !pressHandler && !listener.pressHandler ||\r\n                                pressHandler === listener.pressHandler;\r\n    var releaseHandlerMatches = !pressHandler && !releaseHandler ||\r\n                                !releaseHandler && !listener.releaseHandler ||\r\n                                releaseHandler === listener.releaseHandler;\r\n\r\n    if (comboMatches && pressHandlerMatches && releaseHandlerMatches) {\r\n      this._listeners.splice(i, 1);\r\n      i -= 1;\r\n    }\r\n  }\r\n};\r\nKeyboard.prototype.removeListener = Keyboard.prototype.unbind;\r\nKeyboard.prototype.off            = Keyboard.prototype.unbind;\r\n\r\nKeyboard.prototype.setContext = function(contextName) {\r\n  if(this._locale) { this.releaseAllKeys(); }\r\n\r\n  if (!this._contexts[contextName]) {\r\n    this._contexts[contextName] = [];\r\n  }\r\n  this._listeners      = this._contexts[contextName];\r\n  this._currentContext = contextName;\r\n};\r\n\r\nKeyboard.prototype.getContext = function() {\r\n  return this._currentContext;\r\n};\r\n\r\nKeyboard.prototype.withContext = function(contextName, callback) {\r\n  var previousContextName = this.getContext();\r\n  this.setContext(contextName);\r\n\r\n  callback();\r\n\r\n  this.setContext(previousContextName);\r\n};\r\n\r\nKeyboard.prototype.watch = function(targetWindow, targetElement, targetPlatform, targetUserAgent) {\r\n  var _this = this;\r\n\r\n  this.stop();\r\n\r\n  if (!targetWindow) {\r\n    if (!global.addEventListener && !global.attachEvent) {\r\n      throw new Error('Cannot find global functions addEventListener or attachEvent.');\r\n    }\r\n    targetWindow = global;\r\n  }\r\n\r\n  if (typeof targetWindow.nodeType === 'number') {\r\n    targetUserAgent = targetPlatform;\r\n    targetPlatform  = targetElement;\r\n    targetElement   = targetWindow;\r\n    targetWindow    = global;\r\n  }\r\n\r\n  if (!targetWindow.addEventListener && !targetWindow.attachEvent) {\r\n    throw new Error('Cannot find addEventListener or attachEvent methods on targetWindow.');\r\n  }\r\n\r\n  this._isModernBrowser = !!targetWindow.addEventListener;\r\n\r\n  var userAgent = targetWindow.navigator && targetWindow.navigator.userAgent || '';\r\n  var platform  = targetWindow.navigator && targetWindow.navigator.platform  || '';\r\n\r\n  targetElement   && targetElement   !== null || (targetElement   = targetWindow.document);\r\n  targetPlatform  && targetPlatform  !== null || (targetPlatform  = platform);\r\n  targetUserAgent && targetUserAgent !== null || (targetUserAgent = userAgent);\r\n\r\n  this._targetKeyDownBinding = function(event) {\r\n    _this.pressKey(event.keyCode, event);\r\n    _this._handleCommandBug(event, platform);\r\n  };\r\n  this._targetKeyUpBinding = function(event) {\r\n    _this.releaseKey(event.keyCode, event);\r\n  };\r\n  this._targetResetBinding = function(event) {\r\n    _this.releaseAllKeys(event)\r\n  };\r\n\r\n  this._bindEvent(targetElement, 'keydown', this._targetKeyDownBinding);\r\n  this._bindEvent(targetElement, 'keyup',   this._targetKeyUpBinding);\r\n  this._bindEvent(targetWindow,  'focus',   this._targetResetBinding);\r\n  this._bindEvent(targetWindow,  'blur',    this._targetResetBinding);\r\n\r\n  this._targetElement   = targetElement;\r\n  this._targetWindow    = targetWindow;\r\n  this._targetPlatform  = targetPlatform;\r\n  this._targetUserAgent = targetUserAgent;\r\n};\r\n\r\nKeyboard.prototype.stop = function() {\r\n  var _this = this;\r\n\r\n  if (!this._targetElement || !this._targetWindow) { return; }\r\n\r\n  this._unbindEvent(this._targetElement, 'keydown', this._targetKeyDownBinding);\r\n  this._unbindEvent(this._targetElement, 'keyup',   this._targetKeyUpBinding);\r\n  this._unbindEvent(this._targetWindow,  'focus',   this._targetResetBinding);\r\n  this._unbindEvent(this._targetWindow,  'blur',    this._targetResetBinding);\r\n\r\n  this._targetWindow  = null;\r\n  this._targetElement = null;\r\n};\r\n\r\nKeyboard.prototype.pressKey = function(keyCode, event) {\r\n  if (this._paused) { return; }\r\n  if (!this._locale) { throw new Error('Locale not set'); }\r\n\r\n  this._locale.pressKey(keyCode);\r\n  this._applyBindings(event);\r\n};\r\n\r\nKeyboard.prototype.releaseKey = function(keyCode, event) {\r\n  if (this._paused) { return; }\r\n  if (!this._locale) { throw new Error('Locale not set'); }\r\n\r\n  this._locale.releaseKey(keyCode);\r\n  this._clearBindings(event);\r\n};\r\n\r\nKeyboard.prototype.releaseAllKeys = function(event) {\r\n  if (this._paused) { return; }\r\n  if (!this._locale) { throw new Error('Locale not set'); }\r\n\r\n  this._locale.pressedKeys.length = 0;\r\n  this._clearBindings(event);\r\n};\r\n\r\nKeyboard.prototype.pause = function() {\r\n  if (this._paused) { return; }\r\n  if (this._locale) { this.releaseAllKeys(); }\r\n  this._paused = true;\r\n};\r\n\r\nKeyboard.prototype.resume = function() {\r\n  this._paused = false;\r\n};\r\n\r\nKeyboard.prototype.reset = function() {\r\n  this.releaseAllKeys();\r\n  this._listeners.length = 0;\r\n};\r\n\r\nKeyboard.prototype._bindEvent = function(targetElement, eventName, handler) {\r\n  return this._isModernBrowser ?\r\n    targetElement.addEventListener(eventName, handler, false) :\r\n    targetElement.attachEvent('on' + eventName, handler);\r\n};\r\n\r\nKeyboard.prototype._unbindEvent = function(targetElement, eventName, handler) {\r\n  return this._isModernBrowser ?\r\n    targetElement.removeEventListener(eventName, handler, false) :\r\n    targetElement.detachEvent('on' + eventName, handler);\r\n};\r\n\r\nKeyboard.prototype._getGroupedListeners = function() {\r\n  var listenerGroups   = [];\r\n  var listenerGroupMap = [];\r\n\r\n  var listeners = this._listeners;\r\n  if (this._currentContext !== 'global') {\r\n    listeners = [].concat(listeners, this._contexts.global);\r\n  }\r\n\r\n  listeners.sort(function(a, b) {\r\n    return (b.keyCombo ? b.keyCombo.keyNames.length : 0) - (a.keyCombo ? a.keyCombo.keyNames.length : 0);\r\n  }).forEach(function(l) {\r\n    var mapIndex = -1;\r\n    for (var i = 0; i < listenerGroupMap.length; i += 1) {\r\n      if (listenerGroupMap[i] === null && l.keyCombo === null ||\r\n          listenerGroupMap[i] !== null && listenerGroupMap[i].isEqual(l.keyCombo)) {\r\n        mapIndex = i;\r\n      }\r\n    }\r\n    if (mapIndex === -1) {\r\n      mapIndex = listenerGroupMap.length;\r\n      listenerGroupMap.push(l.keyCombo);\r\n    }\r\n    if (!listenerGroups[mapIndex]) {\r\n      listenerGroups[mapIndex] = [];\r\n    }\r\n    listenerGroups[mapIndex].push(l);\r\n  });\r\n  return listenerGroups;\r\n};\r\n\r\nKeyboard.prototype._applyBindings = function(event) {\r\n  var preventRepeat = false;\r\n\r\n  event || (event = {});\r\n  event.preventRepeat = function() { preventRepeat = true; };\r\n  event.pressedKeys   = this._locale.pressedKeys.slice(0);\r\n\r\n  var pressedKeys    = this._locale.pressedKeys.slice(0);\r\n  var listenerGroups = this._getGroupedListeners();\r\n\r\n\r\n  for (var i = 0; i < listenerGroups.length; i += 1) {\r\n    var listeners = listenerGroups[i];\r\n    var keyCombo  = listeners[0].keyCombo;\r\n\r\n    if (keyCombo === null || keyCombo.check(pressedKeys)) {\r\n      for (var j = 0; j < listeners.length; j += 1) {\r\n        var listener = listeners[j];\r\n\r\n        if (keyCombo === null) {\r\n          listener = {\r\n            keyCombo               : new KeyCombo(pressedKeys.join('+')),\r\n            pressHandler           : listener.pressHandler,\r\n            releaseHandler         : listener.releaseHandler,\r\n            preventRepeat          : listener.preventRepeat,\r\n            preventRepeatByDefault : listener.preventRepeatByDefault\r\n          };\r\n        }\r\n\r\n        if (listener.pressHandler && !listener.preventRepeat) {\r\n          listener.pressHandler.call(this, event);\r\n          if (preventRepeat) {\r\n            listener.preventRepeat = preventRepeat;\r\n            preventRepeat          = false;\r\n          }\r\n        }\r\n\r\n        if (listener.releaseHandler && this._appliedListeners.indexOf(listener) === -1) {\r\n          this._appliedListeners.push(listener);\r\n        }\r\n      }\r\n\r\n      if (keyCombo) {\r\n        for (var j = 0; j < keyCombo.keyNames.length; j += 1) {\r\n          var index = pressedKeys.indexOf(keyCombo.keyNames[j]);\r\n          if (index !== -1) {\r\n            pressedKeys.splice(index, 1);\r\n            j -= 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nKeyboard.prototype._clearBindings = function(event) {\r\n  event || (event = {});\r\n\r\n  for (var i = 0; i < this._appliedListeners.length; i += 1) {\r\n    var listener = this._appliedListeners[i];\r\n    var keyCombo = listener.keyCombo;\r\n    if (keyCombo === null || !keyCombo.check(this._locale.pressedKeys)) {\r\n      if (this._callerHandler !== listener.releaseHandler) {\r\n        var oldCaller = this._callerHandler;\r\n        this._callerHandler = listener.releaseHandler;\r\n        listener.preventRepeat = listener.preventRepeatByDefault;\r\n        listener.releaseHandler.call(this, event);\r\n        this._callerHandler = oldCaller;\r\n      }\r\n      this._appliedListeners.splice(i, 1);\r\n      i -= 1;\r\n    }\r\n  }\r\n};\r\n\r\nKeyboard.prototype._handleCommandBug = function(event, platform) {\r\n  // On Mac when the command key is kept pressed, keyup is not triggered for any other key.\r\n  // In this case force a keyup for non-modifier keys directly after the keypress.\r\n  var modifierKeys = [\"shift\", \"ctrl\", \"alt\", \"capslock\", \"tab\", \"command\"];\r\n  if (platform.match(\"Mac\") && this._locale.pressedKeys.includes(\"command\") &&\r\n      !modifierKeys.includes(this._locale.getKeyNames(event.keyCode)[0])) {\r\n    this._targetKeyUpBinding(event);\r\n  }\r\n};\r\n\r\nmodule.exports = Keyboard;\r\n","\r\nmodule.exports = function(locale, platform, userAgent) {\r\n\r\n  // general\r\n  locale.bindKeyCode(3,   ['cancel']);\r\n  locale.bindKeyCode(8,   ['backspace']);\r\n  locale.bindKeyCode(9,   ['tab']);\r\n  locale.bindKeyCode(12,  ['clear']);\r\n  locale.bindKeyCode(13,  ['enter']);\r\n  locale.bindKeyCode(16,  ['shift']);\r\n  locale.bindKeyCode(17,  ['ctrl']);\r\n  locale.bindKeyCode(18,  ['alt', 'menu']);\r\n  locale.bindKeyCode(19,  ['pause', 'break']);\r\n  locale.bindKeyCode(20,  ['capslock']);\r\n  locale.bindKeyCode(27,  ['escape', 'esc']);\r\n  locale.bindKeyCode(32,  ['space', 'spacebar']);\r\n  locale.bindKeyCode(33,  ['pageup']);\r\n  locale.bindKeyCode(34,  ['pagedown']);\r\n  locale.bindKeyCode(35,  ['end']);\r\n  locale.bindKeyCode(36,  ['home']);\r\n  locale.bindKeyCode(37,  ['left']);\r\n  locale.bindKeyCode(38,  ['up']);\r\n  locale.bindKeyCode(39,  ['right']);\r\n  locale.bindKeyCode(40,  ['down']);\r\n  locale.bindKeyCode(41,  ['select']);\r\n  locale.bindKeyCode(42,  ['printscreen']);\r\n  locale.bindKeyCode(43,  ['execute']);\r\n  locale.bindKeyCode(44,  ['snapshot']);\r\n  locale.bindKeyCode(45,  ['insert', 'ins']);\r\n  locale.bindKeyCode(46,  ['delete', 'del']);\r\n  locale.bindKeyCode(47,  ['help']);\r\n  locale.bindKeyCode(145, ['scrolllock', 'scroll']);\r\n  locale.bindKeyCode(188, ['comma', ',']);\r\n  locale.bindKeyCode(190, ['period', '.']);\r\n  locale.bindKeyCode(191, ['slash', 'forwardslash', '/']);\r\n  locale.bindKeyCode(192, ['graveaccent', '`']);\r\n  locale.bindKeyCode(219, ['openbracket', '[']);\r\n  locale.bindKeyCode(220, ['backslash', '\\\\']);\r\n  locale.bindKeyCode(221, ['closebracket', ']']);\r\n  locale.bindKeyCode(222, ['apostrophe', '\\'']);\r\n\r\n  // 0-9\r\n  locale.bindKeyCode(48, ['zero', '0']);\r\n  locale.bindKeyCode(49, ['one', '1']);\r\n  locale.bindKeyCode(50, ['two', '2']);\r\n  locale.bindKeyCode(51, ['three', '3']);\r\n  locale.bindKeyCode(52, ['four', '4']);\r\n  locale.bindKeyCode(53, ['five', '5']);\r\n  locale.bindKeyCode(54, ['six', '6']);\r\n  locale.bindKeyCode(55, ['seven', '7']);\r\n  locale.bindKeyCode(56, ['eight', '8']);\r\n  locale.bindKeyCode(57, ['nine', '9']);\r\n\r\n  // numpad\r\n  locale.bindKeyCode(96, ['numzero', 'num0']);\r\n  locale.bindKeyCode(97, ['numone', 'num1']);\r\n  locale.bindKeyCode(98, ['numtwo', 'num2']);\r\n  locale.bindKeyCode(99, ['numthree', 'num3']);\r\n  locale.bindKeyCode(100, ['numfour', 'num4']);\r\n  locale.bindKeyCode(101, ['numfive', 'num5']);\r\n  locale.bindKeyCode(102, ['numsix', 'num6']);\r\n  locale.bindKeyCode(103, ['numseven', 'num7']);\r\n  locale.bindKeyCode(104, ['numeight', 'num8']);\r\n  locale.bindKeyCode(105, ['numnine', 'num9']);\r\n  locale.bindKeyCode(106, ['nummultiply', 'num*']);\r\n  locale.bindKeyCode(107, ['numadd', 'num+']);\r\n  locale.bindKeyCode(108, ['numenter']);\r\n  locale.bindKeyCode(109, ['numsubtract', 'num-']);\r\n  locale.bindKeyCode(110, ['numdecimal', 'num.']);\r\n  locale.bindKeyCode(111, ['numdivide', 'num/']);\r\n  locale.bindKeyCode(144, ['numlock', 'num']);\r\n\r\n  // function keys\r\n  locale.bindKeyCode(112, ['f1']);\r\n  locale.bindKeyCode(113, ['f2']);\r\n  locale.bindKeyCode(114, ['f3']);\r\n  locale.bindKeyCode(115, ['f4']);\r\n  locale.bindKeyCode(116, ['f5']);\r\n  locale.bindKeyCode(117, ['f6']);\r\n  locale.bindKeyCode(118, ['f7']);\r\n  locale.bindKeyCode(119, ['f8']);\r\n  locale.bindKeyCode(120, ['f9']);\r\n  locale.bindKeyCode(121, ['f10']);\r\n  locale.bindKeyCode(122, ['f11']);\r\n  locale.bindKeyCode(123, ['f12']);\r\n\r\n  // secondary key symbols\r\n  locale.bindMacro('shift + `', ['tilde', '~']);\r\n  locale.bindMacro('shift + 1', ['exclamation', 'exclamationpoint', '!']);\r\n  locale.bindMacro('shift + 2', ['at', '@']);\r\n  locale.bindMacro('shift + 3', ['number', '#']);\r\n  locale.bindMacro('shift + 4', ['dollar', 'dollars', 'dollarsign', '$']);\r\n  locale.bindMacro('shift + 5', ['percent', '%']);\r\n  locale.bindMacro('shift + 6', ['caret', '^']);\r\n  locale.bindMacro('shift + 7', ['ampersand', 'and', '&']);\r\n  locale.bindMacro('shift + 8', ['asterisk', '*']);\r\n  locale.bindMacro('shift + 9', ['openparen', '(']);\r\n  locale.bindMacro('shift + 0', ['closeparen', ')']);\r\n  locale.bindMacro('shift + -', ['underscore', '_']);\r\n  locale.bindMacro('shift + =', ['plus', '+']);\r\n  locale.bindMacro('shift + [', ['opencurlybrace', 'opencurlybracket', '{']);\r\n  locale.bindMacro('shift + ]', ['closecurlybrace', 'closecurlybracket', '}']);\r\n  locale.bindMacro('shift + \\\\', ['verticalbar', '|']);\r\n  locale.bindMacro('shift + ;', ['colon', ':']);\r\n  locale.bindMacro('shift + \\'', ['quotationmark', '\\'']);\r\n  locale.bindMacro('shift + !,', ['openanglebracket', '<']);\r\n  locale.bindMacro('shift + .', ['closeanglebracket', '>']);\r\n  locale.bindMacro('shift + /', ['questionmark', '?']);\r\n  \r\n  if (platform.match('Mac')) {\r\n    locale.bindMacro('command', ['mod', 'modifier']);\r\n  } else {\r\n    locale.bindMacro('ctrl', ['mod', 'modifier']);\r\n  }\r\n\r\n  //a-z and A-Z\r\n  for (var keyCode = 65; keyCode <= 90; keyCode += 1) {\r\n    var keyName = String.fromCharCode(keyCode + 32);\r\n    var capitalKeyName = String.fromCharCode(keyCode);\r\n  \tlocale.bindKeyCode(keyCode, keyName);\r\n  \tlocale.bindMacro('shift + ' + keyName, capitalKeyName);\r\n  \tlocale.bindMacro('capslock + ' + keyName, capitalKeyName);\r\n  }\r\n\r\n  // browser caveats\r\n  var semicolonKeyCode = userAgent.match('Firefox') ? 59  : 186;\r\n  var dashKeyCode      = userAgent.match('Firefox') ? 173 : 189;\r\n  var equalKeyCode     = userAgent.match('Firefox') ? 61  : 187;\r\n  var leftCommandKeyCode;\r\n  var rightCommandKeyCode;\r\n  if (platform.match('Mac') && (userAgent.match('Safari') || userAgent.match('Chrome'))) {\r\n    leftCommandKeyCode  = 91;\r\n    rightCommandKeyCode = 93;\r\n  } else if(platform.match('Mac') && userAgent.match('Opera')) {\r\n    leftCommandKeyCode  = 17;\r\n    rightCommandKeyCode = 17;\r\n  } else if(platform.match('Mac') && userAgent.match('Firefox')) {\r\n    leftCommandKeyCode  = 224;\r\n    rightCommandKeyCode = 224;\r\n  }\r\n  locale.bindKeyCode(semicolonKeyCode,    ['semicolon', ';']);\r\n  locale.bindKeyCode(dashKeyCode,         ['dash', '-']);\r\n  locale.bindKeyCode(equalKeyCode,        ['equal', 'equalsign', '=']);\r\n  locale.bindKeyCode(leftCommandKeyCode,  ['command', 'windows', 'win', 'super', 'leftcommand', 'leftwindows', 'leftwin', 'leftsuper']);\r\n  locale.bindKeyCode(rightCommandKeyCode, ['command', 'windows', 'win', 'super', 'rightcommand', 'rightwindows', 'rightwin', 'rightsuper']);\r\n\r\n  // kill keys\r\n  locale.setKillKey('command');\r\n};\r\n","\r\nvar Keyboard = require('./lib/keyboard');\r\nvar Locale   = require('./lib/locale');\r\nvar KeyCombo = require('./lib/key-combo');\r\n\r\nvar keyboard = new Keyboard();\r\n\r\nkeyboard.setLocale('us', require('./locales/us'));\r\n\r\nexports          = module.exports = keyboard;\r\nexports.Keyboard = Keyboard;\r\nexports.Locale   = Locale;\r\nexports.KeyCombo = KeyCombo;\r\n"],"sourceRoot":""}