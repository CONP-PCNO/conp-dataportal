"""Added Role and OAuth Models

Revision ID: 323a66d1e12a
Revises: 063cdaf656b3
Create Date: 2019-09-17 13:50:25.508404

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '323a66d1e12a'
down_revision = '063cdaf656b3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=50),
                              server_default='', nullable=False),
                    sa.Column('label', sa.String(length=255),
                              server_default='', nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('flask_dance_oauth',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('provider', sa.String(
                        length=50), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('token', sqlalchemy_utils.types.json.JSONType(),
                              nullable=False),
                    sa.Column('provider_user_id', sa.String(
                        length=256), nullable=False),
                    sa.Column('provider_user_login', sa.String(
                        length=256), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('provider', 'provider_user_id')
                    )
    op.create_table('users_roles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('role_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['role_id'], ['roles.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    with op.batch_alter_table('datasets') as batch:
        batch.alter_column('date_created',
                           existing_type=sa.DATETIME(),
                           nullable=True)
        batch.alter_column('date_updated',
                           existing_type=sa.DATETIME(),
                           nullable=True)
    op.drop_index('ix_users_oauth_id', table_name='users')
    with op.batch_alter_table('users') as batch:
        batch.drop_column('oauth_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column(
        'oauth_id', sa.VARCHAR(length=256), nullable=True))
    op.create_index('ix_users_oauth_id', 'users', ['oauth_id'], unique=False)
    with op.batch_alter_table('datasets') as batch:
        batch.alter_column('date_updated',
                           existing_type=sa.DATETIME(),
                           nullable=False)
        batch.alter_column('date_created',
                           existing_type=sa.DATETIME(),
                           nullable=False)
    op.drop_table('users_roles')
    op.drop_table('flask_dance_oauth')
    op.drop_table('roles')
    # ### end Alembic commands ###
